# code auto-generated by material_relations_generate.py
from simphony.cuds.material_relations.material_relation import (
    MaterialRelation)
from simphony.core.cuba import CUBA
from simphony.core.cuds_material_relation import CUDSMaterialRelation
from simphony.core.data_container import DataContainer


class DissipationForce(MaterialRelation):

    """ A DissipationForce material-relation

    Viscous normal force describing the inelasticity of particle collisions.

    Attributes
    ----------
    restitution_coefficient : <type 'numpy.float64'>
        Restitution Coefficient

    """  # noqa

    def __init__(
        self,
        name,
        materials,
        description="",
        restitution_coefficient=1.0
    ):
        super(DissipationForce, self).__init__(
            name=name,
            description=description,
            kind=CUDSMaterialRelation.DISSIPATION_FORCE,
            materials=materials,
            parameters=DataContainer({
                CUBA.RESTITUTION_COEFFICIENT: restitution_coefficient,
            })
        )

    @property
    def restitution_coefficient(self):
        return self._parameters[CUBA.RESTITUTION_COEFFICIENT]

    @restitution_coefficient.setter
    def restitution_coefficient(self, value):
        self._parameters[CUBA.RESTITUTION_COEFFICIENT] = value
