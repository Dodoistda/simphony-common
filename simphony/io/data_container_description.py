# code auto-generated by the cuba-generate.py script.
import tables


class Data(tables.IsDescription):

    name = tables.StringCol(pos=0, shape=(20,))
    direction = tables.Float64Col(pos=1, shape=(3,))
    status = tables.Int32Col(pos=2, shape=(1,))
    label = tables.Int32Col(pos=3, shape=(1,))
    material_id = tables.Int32Col(pos=4, shape=(1,))
    chemical_specie = tables.StringCol(pos=5, shape=(20,))
    material_type = tables.Int32Col(pos=6, shape=(1,))
    shape_center = tables.Float64Col(pos=7, shape=(3,))
    shape_length_uc = tables.Float64Col(pos=8, shape=(3,))
    shape_length = tables.Float64Col(pos=9, shape=(3,))
    shape_radius = tables.Float64Col(pos=10, shape=(3,))
    shape_side = tables.Float64Col(pos=11, shape=(3,))
    crystal_storage = tables.StringCol(pos=12, shape=(20,))
    name_uc = tables.StringCol(pos=13, shape=(20,))
    lattice_vectors = tables.Float64Col(pos=14, shape=(3,3))
    symmetry_lattice_vectors = tables.Int32Col(pos=15, shape=(1,))
    occupancy = tables.Float64Col(pos=16, shape=(1,))
    bond_label = tables.StringCol(pos=17, shape=(20,))
    bond_type = tables.Int32Col(pos=18, shape=(1,))
    velocity = tables.Float64Col(pos=19, shape=(3,))
    acceleration = tables.Float64Col(pos=20, shape=(3,))
    number_of_points = tables.Int32Col(pos=21, shape=(1,))
    radius = tables.Float64Col(pos=22, shape=(1,))
    size = tables.Float64Col(pos=23, shape=(1,))
    mass = tables.Float64Col(pos=24, shape=(1,))
    volume = tables.Float64Col(pos=25, shape=(1,))
    angular_velocity = tables.Float64Col(pos=26, shape=(3,))
    angular_acceleration = tables.Float64Col(pos=27, shape=(3,))
    simulation_domain_dimensions = tables.Float64Col(pos=28, shape=(3,))
    simulation_domain_origin = tables.Float64Col(pos=29, shape=(3,))
    dynamic_viscosity = tables.Float64Col(pos=30, shape=(1,))
    kinematic_viscosity = tables.Float64Col(pos=31, shape=(1,))
    diffusion_coefficient = tables.Float64Col(pos=32, shape=(1,))
    probability_coefficient = tables.Float64Col(pos=33, shape=(1,))
    friction_coefficient = tables.Float64Col(pos=34, shape=(1,))
    scaling_coefficient = tables.Float64Col(pos=35, shape=(1,))
    equation_of_state_coefficient = tables.Float64Col(pos=36, shape=(1,))
    contanct_angle = tables.Float64Col(pos=37, shape=(1,))
    amphiphilicity = tables.Float64Col(pos=38, shape=(1,))
    phase_interaction_strength = tables.Float64Col(pos=39, shape=(1,))
    hamaker_constant = tables.Float64Col(pos=40, shape=(1,))
    zeta_potential = tables.Float64Col(pos=41, shape=(1,))
    ion_valence_effect = tables.Float64Col(pos=42, shape=(1,))
    debye_length = tables.Float64Col(pos=43, shape=(1,))
    smoothing_length = tables.Float64Col(pos=44, shape=(1,))
    lattice_spacing = tables.Float64Col(pos=45, shape=(1,))
    time_step = tables.Float64Col(pos=46, shape=(1,))
    number_of_time_steps = tables.Float64Col(pos=47, shape=(1,))
    force = tables.Float64Col(pos=48, shape=(3,))
    torque = tables.Float64Col(pos=49, shape=(3,))
    density = tables.Float64Col(pos=50, shape=(1,))
    concentration = tables.Float64Col(pos=51, shape=(1,))
    pressure = tables.Float64Col(pos=52, shape=(1,))
    temperature = tables.Float64Col(pos=53, shape=(1,))
    distribution = tables.Float64Col(pos=54, shape=(1,))
    order_parameter = tables.Float64Col(pos=55, shape=(1,))
    original_position = tables.Float64Col(pos=56, shape=(3,))
    delta_displacement = tables.Float64Col(pos=57, shape=(3,))
    external_applied_force = tables.Float64Col(pos=58, shape=(3,))
    euler_angles = tables.Float64Col(pos=59, shape=(3,))
    sphericity = tables.Float64Col(pos=60, shape=(1,))
    young_modulus = tables.Float64Col(pos=61, shape=(1,))
    poisson_ratio = tables.Float64Col(pos=62, shape=(1,))
    ln_of_restitution_coefficient = tables.Float64Col(pos=63, shape=(1,))
    rolling_friction = tables.Float64Col(pos=64, shape=(1,))
    volume_fraction = tables.Float64Col(pos=65, shape=(1,))


class Mask(tables.IsDescription):
    mask = tables.BoolCol(shape=(66,))
