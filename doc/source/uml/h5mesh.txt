@startuml
class Mesh as "H5Mesh(Group)" {
  _v_name: String = <name>
  points : Table = Points
  edges : Table = Edges
  faces : Table = Faces
  cells : Table = Cells
  data : Table = Data
}

class Points as "Points(Table)" {
  _v_name : string = "Points"
  row: PointRow
}

class Edges as "Edges(Table)" {
  _v_name : string = "Edges"
  row: EdgeRow
}

class Faces as "Faces(Table)" {
  _v_name : string = "Faces"
  row: FaceRow
}

class Cells as "Cells(Table)" {
  _v_name : string = "Cells"
 row: CellRow
}

class Data as "Data(Table)" {
  _v_name: String = "Data"
  row : DataRow
}

class PointRow as "Points(Row)" {
  [ uid ] : String[32]
  [ data ] : String[32]
  [ coordinates ] : Float64[3]
}

class EdgeRow as "Edge(Row)" {
  [ uid ] : String[32]
  [ data ] : String[32]
  [ point_uids ] : Array of String[32]
  [ n_points ] : Integer[MAX_POINTS_IN_EDGE]
}

class FaceRow as "Face(Row)" {
  [ uid ] : String[32]
  [ data ] : String[32]
  [ point_uids ] : Array of String[32]
  [ n_points ] : Integer[MAX_POINTS_IN_FACE]
}

class CellRow as "Cell(Row)" {
  [ uid ] : String[32]
  [ data ] : String[32]
  [ point_uids ] : Array of String[32]
  [ n_points ] : Integer[MAX_POINTS_IN_CELL]
}

class DataRow as "Data(Row)" {
  [ uid ]: String[32]
  [ data ]: CUBARow
  [ mask ]: Bool[size of CUBARow]    
}

Mesh -- Data
Mesh -- Points
Mesh -- Edges
Mesh -- Faces
Mesh -- Cells

Points -- PointRow
Edges --EdgeRow
Faces --FaceRow
Cells --CellRow
Data -- DataRow

@enduml